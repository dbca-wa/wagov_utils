import {
  CONTROL_DATA_PROPS_TYPES,
  CONTROL_PROPS_TYPES,
  FILE_DATA_PROPS_TYPES,
  LAYOUT_CONTROL_PROPS_TYPES,
} from '../../utils/control-props-types';

export const propertiesStore = {
  [CONTROL_PROPS_TYPES.LABEL]: {
    name: 'label',
    title: 'Label',
    type: 'string',
    placeholder: 'Enter a label',
    required: true,
    options: undefined,
    value: '',
  },
  [CONTROL_PROPS_TYPES.LABEL_POSITION]: {
    name: 'labelPosition',
    title: 'Label Position',
    type: 'select',
    placeholder: 'Select a position',
    required: false,
    options: [
      { value: 'top', text: 'Top' },
      { value: 'left', text: 'Left' },
      { value: 'right', text: 'Right' },
      { value: 'bottom', text: 'Bottom' },
    ],
    value: 'top',
  },
  [CONTROL_PROPS_TYPES.PLACEHOLDER]: {
    name: 'placeholder',
    title: 'Placeholder',
    type: 'string',
    placeholder: 'Enter a placeholder',
    required: false,
    options: undefined,
    value: '',
  },
  [CONTROL_PROPS_TYPES.CUSTOM_CLASS]: {
    name: 'customClass',
    title: 'Custom Class',
    type: 'string',
    placeholder: 'Custom CSS classes',
    required: false,
    options: undefined,
    value: '',
  },
  [CONTROL_PROPS_TYPES.DESCRIPTION]: {
    name: 'description',
    title: 'Description',
    type: 'html',
    placeholder: 'Enter a description',
    required: false,
    options: undefined,
    value: '',
    className: 'code-editor-xsmall',
  },
  [CONTROL_PROPS_TYPES.TOOLTIP]: {
    name: 'tooltip',
    title: 'Tooltip',
    type: 'html',
    placeholder: 'Enter a tooltip',
    required: false,
    options: undefined,
    value: '',
    className: 'code-editor-xsmall',
  },
  [CONTROL_PROPS_TYPES.PREFIX]: {
    name: 'prefix',
    title: 'Prefix',
    type: 'string',
    placeholder: 'Enter a prefix',
    required: false,
    options: undefined,
    value: '',
  },
  [CONTROL_PROPS_TYPES.SUFFIX]: {
    name: 'suffix',
    title: 'Suffix',
    type: 'string',
    placeholder: 'Enter a suffix',
    required: false,
    options: undefined,
    value: '',
  },
  [CONTROL_PROPS_TYPES.TAB_INDEX]: {
    name: 'tabIndex',
    title: 'Tab Index',
    type: 'number',
    placeholder: 'Enter a tabIndex',
    required: false,
    options: undefined,
    value: '',
  },
  [CONTROL_PROPS_TYPES.HIDDEN]: {
    name: 'hidden',
    title: 'Hidden',
    type: 'boolean',
    placeholder: 'Enter a hidden',
    required: false,
    options: undefined,
    value: false,
  },
  [CONTROL_PROPS_TYPES.DISABLED]: {
    name: 'disabled',
    title: 'Disabled',
    type: 'boolean',
    placeholder: 'Enter a disabled',
    required: false,
    options: undefined,
    value: false,
  },
  [CONTROL_PROPS_TYPES.HIDE_LABEL]: {
    name: 'hideLabel',
    title: 'Hide Label',
    type: 'boolean',
    placeholder: 'Enter a hideLabel',
    required: false,
    options: undefined,
    value: false,
  },
  [CONTROL_PROPS_TYPES.CHECKED]: {
    name: 'checked',
    title: 'Checked',
    type: 'boolean',
    placeholder: 'Enter a checked',
    required: false,
    options: undefined,
    value: false,
  },
  [CONTROL_PROPS_TYPES.TEXTAREA_ROWS]: {
    name: 'rows',
    title: 'Size',
    type: 'select',
    placeholder: 'Select a size',
    required: false,
    options: [
      { value: 1, text: 'Single' },
      { value: 3, text: 'Medium' },
      { value: 5, text: 'Large' },
    ],
    value: '',
  },

  [CONTROL_PROPS_TYPES.ACTION]: {
    // Options are submit, reset, button
    name: 'action',
    title: 'Action',

    type: 'select',
    placeholder: 'Select an action',
    required: false,
    options: [
      { value: 'submit', text: 'Submit' },
      { value: 'reset', text: 'Reset' },
      { value: 'button', text: 'Button' },
    ],
    value: 'submit',
  },
  [CONTROL_PROPS_TYPES.SAVE_ON_ENTER]: {
    name: 'checked',
    title: 'Save on enter',
    type: 'boolean',
    placeholder: 'Enter a checked',
    required: false,
    options: undefined,
    value: false,
  },
  [CONTROL_PROPS_TYPES.THEME]: {
    // it's a select with values default, primary, secondary, success, danger, warning, info, light, dark
    name: 'theme',
    title: 'Theme',
    type: 'select',
    placeholder: 'Select a theme',
    required: false,
    options: [
      { value: 'default', text: 'Default' },
      { value: 'primary', text: 'Primary' },
      { value: 'secondary', text: 'Secondary' },
      { value: 'success', text: 'Success' },
      { value: 'danger', text: 'Danger' },
      { value: 'warning', text: 'Warning' },
      { value: 'info', text: 'Info' },
      { value: 'light', text: 'Light' },
      { value: 'dark', text: 'Dark' },
      { value: 'link', text: 'Link' },
    ],
    value: '',
  },
  [CONTROL_PROPS_TYPES.SIZE]: {
    // it's a select with values sm, lg
    name: 'size',
    title: 'Size',
    type: 'select',
    placeholder: 'Select a size',
    required: false,
    options: [
      { value: '', text: 'Normal' },
      { value: 'sm', text: 'Small' },
      { value: 'lg', text: 'Large' },
    ],
    value: '',
  },
  [CONTROL_PROPS_TYPES.BLOCK_BUTTON]: {
    name: 'blockButton',
    title: 'Block button',
    type: 'boolean',
    placeholder: 'Enter a blockButton',
    required: false,
    options: undefined,
    value: false,
  },
  [CONTROL_PROPS_TYPES.LEFT_ICON]: {
    name: 'leftIcon',
    title: 'Left icon',
    type: 'string',
    placeholder: 'e.g. bi bi-icon',
    required: false,
    options: undefined,
    value: '',
  },
  [CONTROL_PROPS_TYPES.RIGHT_ICON]: {
    name: 'rightIcon',
    title: 'Right icon',
    type: 'string',
    placeholder: 'e.g. bi bi-icon',
    required: false,
    options: undefined,
    value: '',
  },
  [CONTROL_PROPS_TYPES.DISPLAY_MASK]: {
    name: 'displayMask',
    title: 'Display Mask',
    type: 'string',
    placeholder: 'Enter a display mask',
    required: false,
    options: undefined,
  },
  [CONTROL_PROPS_TYPES.SIDE_BUTTONS]: {
    name: 'sideButtons',
    title: 'Show side buttons',
    type: 'boolean',
    placeholder: 'Enter a side buttons',
    required: false,
    options: undefined,
    value: false,
  },
  [CONTROL_PROPS_TYPES.STEP]: {
    name: 'step',
    title: 'Step',
    type: 'number',
    placeholder: 'Default is 1',
    required: false,
    options: undefined,
    value: false,
    hide: true,
  },
  [LAYOUT_CONTROL_PROPS_TYPES.TAG]: {
    name: 'tag',
    title: 'HTML tag',
    type: 'string',
    placeholder: 'Enter a HTML tag',
    required: false,
    options: undefined,
    value: '',
  },
  [LAYOUT_CONTROL_PROPS_TYPES.HTML_CONTENT]: {
    name: 'htmlContent',
    title: 'Content',
    type: 'html',
    placeholder: 'Enter any HTML',
    required: false,
    options: undefined,
    value: '',
    className: 'code-editor-small',
  },
  [CONTROL_DATA_PROPS_TYPES.ITEM_TEMPLATE]: {
    name: 'itemTemplate',
    title: 'Item Template',
    type: 'html',
    placeholder: 'Enter an item template',
    required: false,
    options: undefined,
    value: '<span>{{ item.name }}</span>',
    className: 'code-editor-xsmall',
  },
  [FILE_DATA_PROPS_TYPES.MULTIPLE_FILES]: {
    name: 'multipleFiles',
    title: 'Allow multiple files',
    type: 'boolean',
    required: false,
    value: false,
  },
  [FILE_DATA_PROPS_TYPES.DISPLAY_AS_IMAGES]: {
    name: 'displayAsImages',
    title: 'Display as image(s)',
    type: 'boolean',
    required: false,
    options: undefined,
    value: false,
  },
  [FILE_DATA_PROPS_TYPES.FILE_MAX_SIZE]: {
    name: 'fileMaxSize',
    title: 'File maximum size',
    type: 'text',
    required: false,
    options: undefined,
    value: '5MB',
  },
  [FILE_DATA_PROPS_TYPES.FILE_MIN_SIZE]: {
    name: 'fileMinSize',
    title: 'File minimum size',
    type: 'text',
    required: false,
    options: undefined,
    value: '0KB',
  },
  [FILE_DATA_PROPS_TYPES.FILE_FORMATS]: {
    name: 'fileFormats',
    title: 'Formats accepted',
    type: 'multi-select',
    placeholder: 'e.g. .pdf, .docx, .xlsx',
    required: false,
    options: [
      { value: 'image/*', text: 'All images' },
      { value: 'video/*', text: 'All videos' },
      { value: 'audio/*', text: 'All audios' },
      { value: '.pdf', text: 'PDF' },
      { value: '.docx', text: 'DOCX' },
      { value: '.xlsx', text: 'XLSX' },
      { value: '.jpg', text: 'JPG' },
      { value: '.png', text: 'PNG' },
      { value: '.gif', text: 'GIF' },
      { value: '.bmp', text: 'BMP' },
      { value: '.svg', text: 'SVG' },
      { value: '.mp4', text: 'MP4' },
      { value: '.mov', text: 'MOV' },
      { value: '.avi', text: 'AVI' },
      { value: '.mp3', text: 'MP3' },
      { value: '.wav', text: 'WAV' },
      { value: '.ogg', text: 'OGG' },
      { value: '.flac', text: 'FLAC' },
      { value: '.zip', text: 'ZIP' },
      { value: '.rar', text: 'RAR' },
      { value: '.tar', text: 'TAR' },
      { value: '.gz', text: 'GZ' },
      { value: '.7z', text: '7Z' },
      { value: '.txt', text: 'TXT' },
      { value: '.csv', text: 'CSV' },
      { value: '.json', text: 'JSON' },
      { value: '.xml', text: 'XML' },
      { value: '.html', text: 'HTML' },
      { value: '.css', text: 'CSS' },
      { value: '.js', text: 'JS' },
      { value: '.ts', text: 'TS' },
      { value: '.jsx', text: 'JSX' },
      { value: '.tsx', text: 'TSX' },
      { value: '.py', text: 'PY' },
      { value: '.java', text: 'JAVA' },
      { value: '.php', text: 'PHP' },
      { value: '.rb', text: 'RB' },
      { value: '.cs', text: 'CS' },
      { value: '.go', text: 'GO' },
      { value: '.swift', text: 'SWIFT' },
    ],
    value: '',
  },
  [FILE_DATA_PROPS_TYPES.FILE_TYPES]: {
    name: 'fileTypes',
    title: 'File types',
    type: 'array',
    required: false,
    options: undefined,
    value: '',
    props: {
      sortable: false,
      structure: {
        label: {
          name: 'label',
          title: 'Label',
          type: 'string',
          placeholder: '',
          required: true,
          value: '',
        },
        value: {
          name: 'value',
          title: 'Value',
          type: 'string',
          placeholder: '',
          required: true,
          value: '',
        },
      },
    },
  },
};
